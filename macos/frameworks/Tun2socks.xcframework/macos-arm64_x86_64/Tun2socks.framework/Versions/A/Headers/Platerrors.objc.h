// Objective-C API for talking to github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors Go package.
//   gobind -lang=objc github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors
//
// File is generated by gobind. Do not edit.

#ifndef __Platerrors_H__
#define __Platerrors_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class PlaterrorsPlatformError;

/**
 * PlatformError represents an error that originate from the native network code.
It can be serialized to JSON and shared between Go and TypeScript.
 */
@interface PlaterrorsPlatformError : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
// skipped constructor PlatformError.NewPlatformError with unsupported parameter or return types

// skipped field PlatformError.Code with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

@property (nonatomic) NSString* _Nonnull message;
// skipped field PlatformError.Details with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorDetails

@property (nonatomic) PlaterrorsPlatformError* _Nullable cause;
/**
 * Error returns a JSON string containing the error details and all its underlying causes,
until it finds a cause that is not a [PlatformError].
The resulting JSON can be used to reconstruct the error in TypeScript.
 */
- (NSString* _Nonnull)error;
/**
 * Unwrap returns the cause of this [PlatformError].
 */
- (BOOL)unwrap:(NSError* _Nullable* _Nullable)error;
@end

// skipped const DataTransmissionFailed with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const DisconnectSystemVPNFailed with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const FetchConfigFailed with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const InternalError with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const InvalidConfig with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const OperationCanceled with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const ProviderError with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const ProxyServerReadFailed with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const ProxyServerUDPUnsupported with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const ProxyServerUnreachable with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const ProxyServerWriteFailed with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const ResolveIPFailed with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const SetupSystemVPNFailed with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const SetupTrafficHandlerFailed with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const Unauthenticated with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode

// skipped const VPNPermissionNotGranted with unsupported type: github.com/Jigsaw-Code/outline-apps/client/go/outline/platerrors.ErrorCode


/**
 * MarshalJSONString returns a JSON string containing the [PlatformError] details
and all its underlying causes.
The resulting JSON can be used to reconstruct the error in TypeScript.
 */
FOUNDATION_EXPORT NSString* _Nonnull PlaterrorsMarshalJSONString(PlaterrorsPlatformError* _Nullable e, NSError* _Nullable* _Nullable error);

// skipped function NewPlatformError with unsupported parameter or return types


/**
 * ToPlatformError converts an [error] into a [PlatformError].
If the provided err is already a [PlatformError], it is returned as is.
Otherwise, the err is wrapped into a new [PlatformError] of [InternalError].
It returns nil if err is nil.
 */
FOUNDATION_EXPORT PlaterrorsPlatformError* _Nullable PlaterrorsToPlatformError(NSError* _Nullable err);

#endif
